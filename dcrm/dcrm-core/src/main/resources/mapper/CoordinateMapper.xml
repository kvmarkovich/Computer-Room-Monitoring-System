<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ouc.dcrm.system.dao.CoordinateDao" >
  <resultMap id="BaseResultMap" type="Coordinate" >
    <id column="coordinateId" property="coordinateid" jdbcType="INTEGER" />
    <result column="siteId" property="siteid" jdbcType="INTEGER" />
    <result column="sensorId" property="sensorid" jdbcType="INTEGER" />
    <result column="coordinateName" property="coordinatename" jdbcType="CHAR" />
    <result column="unit" property="unit" jdbcType="CHAR" />
    <result column="upLimit" property="uplimit" jdbcType="REAL" />
    <result column="lowLimit" property="lowlimit" jdbcType="REAL" />
    <result column="visible" property="visible" jdbcType="TINYINT" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    coordinateId, siteId, sensorId, coordinateName, unit, upLimit, lowLimit, visible
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from coordinate
    where coordinateId = #{coordinateid,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from coordinate
    where coordinateId = #{coordinateid,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="Coordinate" >
    insert into coordinate (coordinateId, siteId, sensorId, 
      coordinateName, unit, upLimit, 
      lowLimit, visible)
    values (#{coordinateid,jdbcType=INTEGER}, #{siteid,jdbcType=INTEGER}, #{sensorid,jdbcType=INTEGER}, 
      #{coordinatename,jdbcType=CHAR}, #{unit,jdbcType=CHAR}, #{uplimit,jdbcType=REAL}, 
      #{lowlimit,jdbcType=REAL}, #{visible,jdbcType=TINYINT})
  </insert>
  
  <insert id="insertSelective" parameterType="Coordinate" >
    insert into coordinate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="coordinateid != null" >
        coordinateId,
      </if>
      <if test="siteid != null" >
        siteId,
      </if>
      <if test="sensorid != null" >
        sensorId,
      </if>
      <if test="coordinatename != null" >
        coordinateName,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="uplimit != null" >
        upLimit,
      </if>
      <if test="lowlimit != null" >
        lowLimit,
      </if>
      <if test="visible != null" >
        visible,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="coordinateid != null" >
        #{coordinateid,jdbcType=INTEGER},
      </if>
      <if test="siteid != null" >
        #{siteid,jdbcType=INTEGER},
      </if>
      <if test="sensorid != null" >
        #{sensorid,jdbcType=INTEGER},
      </if>
      <if test="coordinatename != null" >
        #{coordinatename,jdbcType=CHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=CHAR},
      </if>
      <if test="uplimit != null" >
        #{uplimit,jdbcType=REAL},
      </if>
      <if test="lowlimit != null" >
        #{lowlimit,jdbcType=REAL},
      </if>
      <if test="visible != null" >
        #{visible,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="Coordinate" >
    update coordinate
    <set >
      <if test="siteid != null" >
        siteId = #{siteid,jdbcType=INTEGER},
      </if>
      <if test="sensorid != null" >
        sensorId = #{sensorid,jdbcType=INTEGER},
      </if>
      <if test="coordinatename != null" >
        coordinateName = #{coordinatename,jdbcType=CHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=CHAR},
      </if>
      <if test="uplimit != null" >
        upLimit = #{uplimit,jdbcType=REAL},
      </if>
      <if test="lowlimit != null" >
        lowLimit = #{lowlimit,jdbcType=REAL},
      </if>
      <if test="visible != null" >
        visible = #{visible,jdbcType=TINYINT},
      </if>
    </set>
    where coordinateId = #{coordinateid,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="Coordinate" >
    update coordinate
    set siteId = #{siteid,jdbcType=INTEGER},
      sensorId = #{sensorid,jdbcType=INTEGER},
      coordinateName = #{coordinatename,jdbcType=CHAR},
      unit = #{unit,jdbcType=CHAR},
      upLimit = #{uplimit,jdbcType=REAL},
      lowLimit = #{lowlimit,jdbcType=REAL},
      visible = #{visible,jdbcType=TINYINT}
    where coordinateId = #{coordinateid,jdbcType=INTEGER}
  </update>
</mapper>