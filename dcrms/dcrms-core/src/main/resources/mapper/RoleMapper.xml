<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ouc.dcrms.core.dao.RoleDAO" >
  <resultMap id="BaseResultMap" type="Role" >
    <id column="roleId" property="roleid" jdbcType="INTEGER" />
    <result column="roleName" property="rolename" jdbcType="CHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="userSequence" property="usersequence" jdbcType="VARCHAR" />
    <result column="resSequence" property="ressequence" jdbcType="VARCHAR" />
    <result column="gmtCreate" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmtModified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="createBy" property="createBy" jdbcType="VARCHAR" />
    <result column="lastModifedBy" property="lastModifedBy" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    roleId, roleName, description, userSequence, resSequence, 
    gmtCreate, gmtModified, createBy, lastModifedBy
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role
    where roleId = #{roleid,jdbcType=INTEGER}
  </select>
  
  <select id="selectTotalNum" resultType="Integer" >
    select count(*) from role
    <trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="rolename != null and rolename != '' ">
			and roleName like CONCAT(CONCAT('%', #{rolename}),'%')
		</if>
		<if test="description != null and description != '' ">
			and description like CONCAT(CONCAT('%', #{description}),'%')
		</if>
	</trim>
  </select>
  
  <select id="selectRoles" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from role
    <trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="rolename != null and rolename != '' ">
			and roleName like CONCAT(CONCAT('%', #{rolename}),'%')
		</if>
		<if test="description != null and description != '' ">
			and description like CONCAT(CONCAT('%', #{description}),'%')
		</if>
	</trim>
	Limit #{startIndex},#{pageSize}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where roleId = #{roleid,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="Role" >
    insert into role (roleId, roleName, description, userSequence, 
      resSequence, gmtCreate, gmtModified, createBy, lastModifedBy)
    values (#{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{usersequence,jdbcType=VARCHAR}, #{ressequence,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP},
      #{gmtModified,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{lastModifedBy,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        roleId,
      </if>
      <if test="rolename != null" >
        roleName,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="usersequence != null" >
        userSequence,
      </if>
      <if test="ressequence != null" >
        resSequence,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=CHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="usersequence != null" >
        #{usersequence,jdbcType=VARCHAR},
      </if>
      <if test="ressequence != null" >
        #{ressequence,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="Role" >
    update role
    <set >
      <if test="rolename != null" >
        roleName = #{rolename,jdbcType=CHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="usersequence != null" >
        userSequence = #{usersequence,jdbcType=VARCHAR},
      </if>
      <if test="ressequence != null" >
        resSequence = #{ressequence,jdbcType=VARCHAR},
      </if>
    </set>
    where roleId = #{roleid,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="Role" >
    update role
    set roleName = #{rolename,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      userSequence = #{usersequence,jdbcType=VARCHAR},
      resSequence = #{ressequence,jdbcType=VARCHAR},
      gmtCreate = #{gmtCreate,jdbcType=TIMESTAMP},
      gmtModified = #{gmtModified,jdbcType=TIMESTAMP},
      createBy = #{createBy,jdbcType=VARCHAR},
      lastModifedBy = #{lastModifedBy,jdbcType=VARCHAR}
    where roleId = #{roleid,jdbcType=INTEGER}
  </update>
</mapper>